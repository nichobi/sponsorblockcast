name: build-and-push-image

on:
  schedule:
    - cron: '0 0 * * *'  # Schedule to run once every day
  push:
    branches:
      - main

jobs:
  build-multi-arch-image:
    name: Build multi-arch Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get current go-chromecast version from Dockerfile
        id: get-current-version
        run: |
          CURRENT_CHROMECASTGOVERSION=$(grep -oP '(?<=CHROMECASTGOVERSION=).*' Dockerfile)
          echo "CURRENT_CHROMECASTGOVERSION=$CURRENT_CHROMECASTGOVERSION" >> $GITHUB_ENV

      - name: Get latest go-chromecast version
        id: get-latest-version
        run: |
          LATEST_VERSION=$(curl -s "https://api.github.com/repos/vishen/go-chromecast/releases/latest" | jq -r '.tag_name')
          echo "LATEST_CHROMECASTGOVERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Check if version is newer and update Dockerfile
        id: check-version-and-update-dockerfile
        run: |
          if [[ "${{ env.CURRENT_CHROMECASTGOVERSION }}" == "${{ env.LATEST_CHROMECASTGOVERSION }}" ]]; then
            echo "No new version available. Skipping Dockerfile update."
            echo "VERSION_CHANGED=false" >> $GITHUB_ENV
          else
            echo "New version available. Updating Dockerfile."
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
            sed -i "s/ENV CHROMECASTGOVERSION=.*/ENV CHROMECASTGOVERSION=${{ env.LATEST_CHROMECASTGOVERSION }}/" ./Dockerfile
          fi
      
      - name: Upload modified Dockerfile as artifact
        uses: actions/upload-artifact@v3
        if: ${{ env.VERSION_CHANGED == 'true' }}
        with:
          name: Dockerfile
          path: ./Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        if: ${{ env.VERSION_CHANGED == 'true' }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          install: true
        if: ${{ env.VERSION_CHANGED == 'true' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ env.VERSION_CHANGED == 'true' }}

      - name: Download modified Dockerfile artifact
        uses: actions/download-artifact@v3
        with:
          name: Dockerfile
        if: ${{ env.VERSION_CHANGED == 'true' }}

      - name: Build and push
        uses:  docker/build-push-action@v4.0.0
        with:
          push: true 
          tags: ghcr.io/${{ github.repository }}:latest
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6
          dockerfile: ./Dockerfile
        if: ${{ env.VERSION_CHANGED == 'true' }}

